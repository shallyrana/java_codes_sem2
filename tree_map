import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;

class Main  {
    private int year;
    private String name;
    private double rating;

    public int getYear() {
        return year;
    }

    public String getName() {
        return name;
    }

    public double getRating() {
        return rating;
    }

    public Main(int year, String name, double rating) {
        this.year = year;
        this.name = name;
        this.rating = rating;
    }

    @Override
    public String toString() {
        return "[year=" + this.year + ", name=" + this.name + ", rating=" + this.rating + "]";
    }
}

public class Comparatorr {
    public static void main(String[] args) {
        List<Movie> movies = new ArrayList<>();
        movies.add(new Movie(1976, "rrkpk", 8.8));
        movies.add(new Movie(2007, "gadar2", 9.0));
        movies.add(new Movie(2017, "satyaprem ki katha", 9.2));

        System.out.println("Original List:");
        System.out.println(movies);

        // Sort by rating in descending order using compare method
        Comparator<Movie> ratingComparator = new Comparator<Movie>() {
            @Override
            public int compare(Movie m1, Movie m2) {
                if (m1.getRating() > m2.getRating()) {
                    return -1;
                } else if (m1.getRating() < m2.getRating()) {
                    return 1;
                } else {
                    return 0;
                }
            }
        };
        Collections.sort(movies, ratingComparator);
        System.out.println("Sorted by rating (Descending Order):");
        System.out.println(movies);

        // Sort by name in ascending order using compare method
        Comparator<Movie> nameComparator = new Comparator<Movie>() {
            @Override
            public int compare(Movie m1, Movie m2) {
                return m1.getName().compareTo(m2.getName());
            }
        };
        Collections.sort(movies, nameComparator);
        System.out.println("Sorted by name (Ascending Order):");
        System.out.println(movies);

        // Sort by year in ascending order using compare method
        Comparator<Movie> yearComparator = new Comparator<Movie>() {
            @Override
            public int compare(Movie m1, Movie m2) {
                return m1.getYear() - m2.getYear();
            }
        };
        Collections.sort(movies, yearComparator);
        System.out.println("Sorted by year (Ascending Order):");
        System.out.println(movies);
    }
}
